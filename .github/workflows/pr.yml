# This file is autogenerated. If you need to change it, please modify source templates foxglove-tech/workflow-templates
name: Pull request

on: [pull_request]

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: potiuk/cancel-workflow-runs@master
        name: "GitHub / Cancel duplicates"
        with:
          cancelMode: allDuplicates
          token: ${{ secrets.GITHUB_TOKEN }}
          sourceRunId: ${{ github.event.workflow_run.id }}
  
      - name: GitHub / Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
  
      - name: Project / Fetch variables
        id: variables
        uses: foxglove-tech/actions-project-variables@master
        with:
          args: --debug
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_EVENT_ACTION: ${{ github.event.action }}
          GITHUB_EVENT_COMMENT: ${{ github.event.comment.body }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}
  
      - name: Git / Fetch variables
        id: git
        uses: foxglove-tech/actions-git-info@master
        with:
          args: info --debug
        env:
          GITHUB_PR_URL: ${{ github.event.issue.pull_request.url }}${{ github.event.pull_request.url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  
    outputs:
      project_id: ${{ steps.variables.outputs.project_id }}
      project_name: ${{ steps.variables.outputs.project_name }}
      use_black: ${{ steps.variables.outputs.use_black }}
      use_flake8: ${{ steps.variables.outputs.use_flake8 }}
      use_pytest: ${{ steps.variables.outputs.use_pytest }}
      use_dockerlint: ${{ steps.variables.outputs.use_dockerlint }}
      is_library: ${{ steps.variables.outputs.is_library }}
      python_version: ${{ steps.variables.outputs.python_version }}
      workflow: ${{ steps.variables.outputs.workflow }}
      package_version: ${{ steps.variables.outputs.package_version }}
      artifact_version: ${{ steps.variables.outputs.artifact_version }}
      aws_account_key: ${{ steps.variables.outputs.aws_account_key }}
      stage: ${{ steps.variables.outputs.stage }}
      current_commit_tag: ${{ steps.git.outputs.current_commit_tag }}
      previous_tag: ${{ steps.git.outputs.previous_tag }}
      previous_tag_sha: ${{ steps.git.outputs.previous_tag_sha }}
  
      is_mergeable: ${{ steps.git.outputs.is_mergeable }}
      head_branch: ${{ steps.git.outputs.head_branch }}
      head_sha: ${{ steps.git.outputs.head_sha }}
      base_branch: ${{ steps.git.outputs.base_branch }}
      base_sha: ${{ steps.git.outputs.head_sha }}
      deployment_ref: ${{ steps.git.outputs.deployment_ref }}

  code-style:
    if: ${{ needs.prepare.outputs.use_flake8 != 0 }}
    runs-on: ubuntu-latest
    needs: [ prepare ]
    steps:
      - name: Python / Setup
        uses: actions/setup-python@v2
        with:
          python-version: ${{ needs.prepare.outputs.python_version }}
  
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
          ref: ${{ needs.merge-master.outputs.commit }}
  
      - uses: foxglove-tech/actions-lintly-flake8@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          failIf: new
          args: "."

  unit-tests:
    runs-on: ubuntu-latest
    needs: [ prepare ]
    if: ${{ needs.prepare.outputs.use_pytest != 0 }}
    steps:
      - name: Python / Setup
        uses: actions/setup-python@v2
        with:
          python-version: ${{ needs.prepare.outputs.python_version }}
  
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
          ref: ${{ needs.prepare.outputs.commit }}
  
      - name: Install poetry
        uses: foxglove-tech/actions-poetry@master
        with:
          poetry-version: 1.1.4
  
      - uses: actions/cache@v2
        with:
          path: /home/runner/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ needs.prepare.outputs.python_version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ needs.prepare.outputs.python_version }}-${{ hashFiles('**/poetry.lock') }}
  
  
      - name: Install project
        run: |
          poetry config http-basic.fury ${GEMFURY_TOKEN} NOPASS
          poetry install
        env:
          GEMFURY_TOKEN: ${{ secrets.GEMFURY_TOKEN }}
  
      - name: Run pytest
        run: |
          poetry run pytest --junitxml=unit-tests.xml
  
      - name: Tests / Results
        uses: foxglove-tech/actions-publish-unit-test-result@master
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Unit Test Results
          files: unit-tests.xml
          report_individual_runs: true
          deduplicate_classes_by_file_name: false